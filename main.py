import os
import sys
from logging.config import dictConfig
import uvicorn
from dotenv import load_dotenv
from fastapi import FastAPI
from pydantic import BaseSettings
from starlette.middleware.cors import CORSMiddleware
sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), 'config'))
from fastapi.openapi.utils import get_openapi
from router.admin import router_country
from config.custom_log import log_config


class Settings(BaseSettings):
    """
    Use this class for adding constants
    """
    app_name: str = "ADMIN APP"


settings = Settings()
dictConfig(log_config)

# env loading
env_file = os.path.join(os.path.dirname(os.path.abspath(__file__)), '.env')
load_dotenv(env_file, override=True)

app = FastAPI(docs_url=os.getenv("swagger_url"), redoc_url=os.getenv("doc_url"))


def custom_openapi():
    if app.openapi_schema:
        return app.openapi_schema
    openapi_schema = get_openapi(
        title="ADMIN (BACKEND APIS)",
        version="1.0",
        description="This apis is used to support ADMIN functionalities :",
        routes=app.routes,
    )
    # delete_422 = delete_422_response(openapi_schema["paths"])
    openapi_schema["info"]["x-logo"] = {
        "url": "https://d2o3z47i1v96zk.cloudfront.net/images/email-template-logo.png"
    }
    app.openapi_schema = openapi_schema
    return app.openapi_schema


app.openapi = custom_openapi

app.include_router(router_country)

app.add_middleware(
    CORSMiddleware,
    allow_origins=['*'],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

if __name__ == '__main__':
    uvicorn.run('main:app', host="0.0.0.0", port=5000, reload=True)


'''-----------------------DOC --------------------------------
This is a Python script for a FastAPI-based web application that provides APIs to support ADMIN functionalities. 
The web application is built using FastAPI, and it uses the uvicorn web server to serve the APIs. 
The application also uses a custom logging configuration and a custom OpenAPI specification.

The script defines a FastAPI application instance with a custom OpenAPI specification, which is generated by 
the custom_openapi function. The application includes a router for handling API requests related to countries. 
The application also includes a CORS middleware to allow cross-origin requests.

The script defines a Settings class that is used to hold constant values for the application. 
The class is defined using Pydantic, which is a library for defining and validating data structures.

The script also loads environment variables from a .env file using the load_dotenv function from the dotenv library. 
The environment variables are used to configure the FastAPI application, such as setting the URL for the Swagger 
documentation and the ReDoc documentation.

Finally, the script uses the uvicorn.run function to start the web server and serve the APIs. 
The uvicorn.run function takes the main:app argument, which tells it to use the app instance from the 
main module as the web application to serve. The function also sets the host and port for the web server, 
as well as enabling auto-reloading of the application code.
'''